"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.fetchInputs = void 0;
const utxolib = require("@bitgo/utxo-lib");
const BaseHttpClient_1 = require("./BaseHttpClient");
/**
 * Fetch transaction inputs from transaction input list
 * @param ins
 * @param api
 * @param network
 */
async function fetchInputs(ins, api, network) {
    const inputIds = ins.map((input) => utxolib.bitgo.getOutputIdForInput(input));
    const txids = [...new Set(inputIds.map((i) => i.txid))];
    const txMap = new Map(await (0, BaseHttpClient_1.mapSeries)(txids, async (txid) => [
        txid,
        utxolib.bitgo.createTransactionFromHex(await api.getTransactionHex(txid), network),
    ]));
    return inputIds.map((i) => {
        const v = txMap.get(i.txid);
        if (v) {
            if (i.vout in v.outs) {
                return v.outs[i.vout];
            }
            throw new Error(`could not find output ${i.vout}`);
        }
        throw new Error(`could not find tx ${i.txid}`);
    });
}
exports.fetchInputs = fetchInputs;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVXR4b0FwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9VdHhvQXBpLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDJDQUEyQztBQUMzQyxxREFBNkM7QUFvQjdDOzs7OztHQUtHO0FBQ0ksS0FBSyxVQUFVLFdBQVcsQ0FDL0IsR0FBc0IsRUFDdEIsR0FBWSxFQUNaLE9BQXdCO0lBRXhCLE1BQU0sUUFBUSxHQUFHLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsbUJBQW1CLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztJQUM5RSxNQUFNLEtBQUssR0FBRyxDQUFDLEdBQUcsSUFBSSxHQUFHLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN4RCxNQUFNLEtBQUssR0FBRyxJQUFJLEdBQUcsQ0FDbkIsTUFBTSxJQUFBLDBCQUFTLEVBQUMsS0FBSyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsRUFBRSxDQUFDO1FBQ3JDLElBQUk7UUFDSixPQUFPLENBQUMsS0FBSyxDQUFDLHdCQUF3QixDQUFDLE1BQU0sR0FBRyxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxFQUFFLE9BQU8sQ0FBQztLQUNuRixDQUFDLENBQ0gsQ0FBQztJQUNGLE9BQU8sUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFO1FBQ3hCLE1BQU0sQ0FBQyxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzVCLElBQUksQ0FBQyxFQUFFO1lBQ0wsSUFBSSxDQUFDLENBQUMsSUFBSSxJQUFJLENBQUMsQ0FBQyxJQUFJLEVBQUU7Z0JBQ3BCLE9BQU8sQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7YUFDdkI7WUFDRCxNQUFNLElBQUksS0FBSyxDQUFDLHlCQUF5QixDQUFDLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQztTQUNwRDtRQUNELE1BQU0sSUFBSSxLQUFLLENBQUMscUJBQXFCLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ2pELENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQztBQXZCRCxrQ0F1QkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyB1dHhvbGliIGZyb20gJ0BiaXRnby91dHhvLWxpYic7XG5pbXBvcnQgeyBtYXBTZXJpZXMgfSBmcm9tICcuL0Jhc2VIdHRwQ2xpZW50JztcbmltcG9ydCB7IFRyYW5zYWN0aW9uQXBpIH0gZnJvbSAnLi9UcmFuc2FjdGlvbkFwaSc7XG5cbi8qKlxuICogTWV0aG9kcyBzcGVjaWZpYyB0byBVVFhPLWJhc2VkIGJsb2NrY2hhaW5zXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgVXR4b0FwaSBleHRlbmRzIFRyYW5zYWN0aW9uQXBpIHtcbiAgLyoqXG4gICAqIEBwYXJhbSB0eGlkXG4gICAqIEByZXR1cm4gdHJhbnNhY3Rpb24gaW5wdXRzXG4gICAqL1xuICBnZXRUcmFuc2FjdGlvbklucHV0cyh0eGlkOiBzdHJpbmcpOiBQcm9taXNlPHV0eG9saWIuYml0Z28uVW5zcGVudFtdPjtcblxuICAvKipcbiAgICogQHBhcmFtIGFkZHJlc3NcbiAgICogQHJldHVybiB1bnNwZW50IG91dHB1dHMgZm9yIGFkZHJlc3Nlc1xuICAgKi9cbiAgZ2V0VW5zcGVudHNGb3JBZGRyZXNzZXMoYWRkcmVzczogc3RyaW5nW10pOiBQcm9taXNlPHV0eG9saWIuYml0Z28uVW5zcGVudFtdPjtcbn1cblxuLyoqXG4gKiBGZXRjaCB0cmFuc2FjdGlvbiBpbnB1dHMgZnJvbSB0cmFuc2FjdGlvbiBpbnB1dCBsaXN0XG4gKiBAcGFyYW0gaW5zXG4gKiBAcGFyYW0gYXBpXG4gKiBAcGFyYW0gbmV0d29ya1xuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZmV0Y2hJbnB1dHMoXG4gIGluczogdXR4b2xpYi5UeElucHV0W10sXG4gIGFwaTogVXR4b0FwaSxcbiAgbmV0d29yazogdXR4b2xpYi5OZXR3b3JrXG4pOiBQcm9taXNlPHV0eG9saWIuVHhPdXRwdXRbXT4ge1xuICBjb25zdCBpbnB1dElkcyA9IGlucy5tYXAoKGlucHV0KSA9PiB1dHhvbGliLmJpdGdvLmdldE91dHB1dElkRm9ySW5wdXQoaW5wdXQpKTtcbiAgY29uc3QgdHhpZHMgPSBbLi4ubmV3IFNldChpbnB1dElkcy5tYXAoKGkpID0+IGkudHhpZCkpXTtcbiAgY29uc3QgdHhNYXAgPSBuZXcgTWFwKFxuICAgIGF3YWl0IG1hcFNlcmllcyh0eGlkcywgYXN5bmMgKHR4aWQpID0+IFtcbiAgICAgIHR4aWQsXG4gICAgICB1dHhvbGliLmJpdGdvLmNyZWF0ZVRyYW5zYWN0aW9uRnJvbUhleChhd2FpdCBhcGkuZ2V0VHJhbnNhY3Rpb25IZXgodHhpZCksIG5ldHdvcmspLFxuICAgIF0pXG4gICk7XG4gIHJldHVybiBpbnB1dElkcy5tYXAoKGkpID0+IHtcbiAgICBjb25zdCB2ID0gdHhNYXAuZ2V0KGkudHhpZCk7XG4gICAgaWYgKHYpIHtcbiAgICAgIGlmIChpLnZvdXQgaW4gdi5vdXRzKSB7XG4gICAgICAgIHJldHVybiB2Lm91dHNbaS52b3V0XTtcbiAgICAgIH1cbiAgICAgIHRocm93IG5ldyBFcnJvcihgY291bGQgbm90IGZpbmQgb3V0cHV0ICR7aS52b3V0fWApO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IoYGNvdWxkIG5vdCBmaW5kIHR4ICR7aS50eGlkfWApO1xuICB9KTtcbn1cbiJdfQ==